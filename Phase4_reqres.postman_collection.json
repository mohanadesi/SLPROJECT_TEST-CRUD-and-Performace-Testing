{
	"info": {
		"_postman_id": "a237f9fa-68aa-4aae-b0d6-a0cbef9cb6bc",
		"name": "Phase4_reqres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27409613",
		"_collection_link": "https://restless-shadow-909717.postman.co/workspace/c305fa7f-1a8e-4099-8846-f299435d9cab/collection/27409613-a237f9fa-68aa-4aae-b0d6-a0cbef9cb6bc?action=share&creator=27409613&source=collection_link"
	},
	"item": [
		{
			"name": "GetSingleUser_UserID_2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users/2",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "ListUsers_pagenumber_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\",function() {\r",
							"    var jSonData = pm.response.json();\r",
							"\r",
							"    pm.collectionVariables.set(\"C_ID\", jSonData.data[2].id);\r",
							"    \r",
							"}\r",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users?page=1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    console.log(pm.response.code);\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"User ID is not empty\", function () {\r",
							"    var responseBody = JSON.parse(pm.response.text());\r",
							"\r",
							"    console.log(responseBody.id)\r",
							"            pm.expect(responseBody.id).to.not.be.empty;\r",
							"        });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "singleuserusingsnippet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData.data.id).to.eql(2);\r",
							"    pm.expect(jsonData.data.first_name).to.eql('Janet');\r",
							"    console.log(jsonData.data.first_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							"var data1 = [true, false];\r",
							"var data2 = [true, false];\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;\r",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;\r",
							"});\r",
							"\r",
							"//pm.collectionVariables.get(\"variable_key\");\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).contains(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleUser_UserID_Variable",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users/{{C_ID}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"{{C_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleUser_Userid_CSV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var user_id = pm.iterationData.get(\"user_id\");\r",
							"    console.log(\"user_id:\", user_id);\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Response user_id:\", jsonData.data.id);\r",
							"    pm.expect(jsonData.data.id).to.eql(user_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users/{{user_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSingleUSer_Userid_Json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var user_id = pm.iterationData.get(\"user_id\");\r",
							"    console.log(\"user_id:\", user_id);\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"Response user_id:\", jsonData.data.id);\r",
							"    pm.expect(jsonData.data.id).to.eql(user_id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"user_id\":\"{{user_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/users/{{user_id}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "ListUsers_pagenumber_variable",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users?page={{Pg_No}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{Pg_No}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListUsers_pagenumber_CSV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var Pg_No = pm.iterationData.get(\"Pg_No\");\r",
							"    console.log(\"Page number:\",Pg_No);\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(jsonData);\r",
							"    console.log(\"Response PAge number:\", jsonData.page);\r",
							"    pm.expect(jsonData.page).to.eql(Pg_No);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/users?page={{Pg_No}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{Pg_No}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ListUsers_pagenumber_Json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var Pg_No = pm.iterationData.get(\"Pg_No\");\r",
							"    console.log(\"Page number:\",Pg_No);\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(jsonData);\r",
							"    console.log(\"Response PAge number:\", jsonData.page);\r",
							"    pm.expect(jsonData.page).to.eql(Pg_No);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"Pg_No\":\"{{Pg_No}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/users?page={{Pg_No}}",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "{{Pg_No}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser_CSV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    console.log(pm.response.code);\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"User ID is not empty\", function () {\r",
							"    var responseBody = JSON.parse(pm.response.text());\r",
							"\r",
							"    console.log(responseBody.id)\r",
							"            pm.expect(responseBody.id).to.not.be.empty;\r",
							"        });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"{{job}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUSer_Json",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    console.log(pm.response.code);\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"User ID is not empty\", function () {\r",
							"    var responseBody = JSON.parse(pm.response.text());\r",
							"\r",
							"    console.log(responseBody.id)\r",
							"            pm.expect(responseBody.id).to.not.be.empty;\r",
							"        });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"job\": \"{{job}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "C_ID",
			"value": "10",
			"type": "string"
		},
		{
			"key": "Pg_No",
			"value": "1"
		}
	]
}